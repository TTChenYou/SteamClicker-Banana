import os
import sys
import time
import subprocess
import pyautogui
import win32gui
import win32con
import ctypes
import logging
import base64
from tkinter import *
from tkinter import messagebox
from threading import Thread, Event
import pystray
from pystray import MenuItem as item
from PIL import Image, ImageTk
from datetime import datetime
from io import BytesIO

# 配置日志
logging.basicConfig(filename='steam_clicker.log', level=logging.INFO, format='%(asctime)s - %(message)s')

# 版本信息和作者
VERSION = "1.0.0"
AUTHOR = "TTChenYou"

# Steam程序URL
steam_program_url = r"steam://rungameid/2923300"
# Steam游戏的进程名称，需要根据具体游戏的进程名称调整
steam_program_process_name = "Banana.exe"  # 替换为实际的游戏进程名称
# Steam游戏的窗口标题，需要根据具体游戏的窗口标题调整
steam_window_title = "Banana"  # 替换为实际的窗口标题

# Base64 编码的图像
banana_base64 = """
<iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AABoC0lEQVR42u3dd3hUVf4G8Pfc6TMppENACEhN6CAdFAVFURGVtWFBF3td+4qKrq6ydlwrtp+irroqKorYUASxgEBCEjoBpCWkkDKZes/vj4iLSiCZdqa8n+fhkV0y9773JpnznXNPAYiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIjimVAdgIjCRy6HCebUJABotHjsmltaAEAzam0gfv39l5C6T68BAN0i3Da32QkA8OyrF4PhVX0NRBQeLACIYoBc2aaNx+jtqGkiUxf+LAGRIXRkSCEyAD1DQmQKIANAFoBUAGmhPD2Aml//VEigUkBWAlqlkLJSaqiUkJWaNFTomqwwu0zbxYCaGtX3jIgOjQUAURSQW2B111lzDUZDFyll
FylkF01qXSRkFwnkCqCd6oyt5AKwE8BmAJuFFJt1oW8WmthsMls2iiOr96kOSJToWAAQRZBcDYfXaCuAFP0g0AdC9oEUvQFkqs4WYRWAXANoRRCyCDpWm1zOYjEYTtXBiBIFCwCiMHEVWrsIIfprmugDoI8E+gHoAkBTnS1K6YDYJCBXAyjShSzSNbnK1tO1RXUwonjEAoAoBOQiGL1t7f0g5ShIDALE0QA6
qs4VJ/ZIgZ80XSyB0Jca7Y3LRWe4VIciinUsAIgCIDekp/i87iG6lKMEMBJNf2yqcyUIL4BCQCyV0JeYjcZFokfdXtWhiGINCwCiFpDFMPvgGK1DnyAgJgAoAH9/ooWEQJGUcqEmDQuMon6pKIBHdSiiaMc3MKJmNJZa8wy6dryAGCchj0fT9DqKfk4A30HI+X7IebZ811bVgYiiEQsAol/JYph9uuMYacAE
SP1EQPRUnYlCogQQnwqBBUZnwzdc3IioCQsASmhSwuArsQ2X0KYA8mwA2aozUVhVA3K+LsU7FpfzUxYDlMhYAFDCkRKar8Q24tdG/ywAOaozkRJVgPxYl+IdS4VzgRgLn+pARJHEAoASwoGNvoScEoMr61F4VQLyExYDlEhYAFBca1hrzzX7xPlSyMsAdFadh6KfAHboQs7VhXzW1stVpjoPUbiwAKC4IyUM
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>"""

class SteamClickerApp:
    def __init__(self, root):
        self.root = root
        self.root.title(f"Steam Clicker v{VERSION} by {AUTHOR}")
        self.root.geometry("400x300")

        # 设置窗口图标
        self.icon_image = ImageTk.PhotoImage(data=base64.b64decode(banana_base64))
        self.root.iconphoto(True, self.icon_image)

        Label(root, text="每隔多少小时执行一次Banana:").pack(pady=10)

        self.interval = Entry(root)
        self.interval.pack(pady=5)

        self.start_button = Button(root, text="开始", command=self.start)
        self.start_button.pack(pady=5)

        self.stop_button = Button(root, text="停止", command=self.stop, state=DISABLED)
        self.stop_button.pack(pady=5)

        self.log_text = Text(root, state='disabled', height=10)
        self.log_text.pack(pady=5, fill=BOTH, expand=True)

        self.running = False
        self.thread = None
        self.stop_event = Event()

        # 创建系统托盘图标
        self.create_tray_icon()

    def find_window(self, title):
        def enum_windows_callback(hwnd, results):
            if win32gui.IsWindowVisible(hwnd):
                window_text = win32gui.GetWindowText(hwnd)
                if title in window_text:
                    results.append(hwnd)
                    self.log(f"找到窗口: {window_text}")

        results = []
        win32gui.EnumWindows(enum_windows_callback, results)
        return results

    def bring_window_to_front(self, hwnd):
        try:
            ctypes.windll.user32.SwitchToThisWindow(hwnd, True)
            win32gui.SetForegroundWindow(hwnd)
            return True
        except Exception as e:
            self.log(f"无法将窗口置于前台: {e}")
            return False

    def open_and_click(self):
        while not self.stop_event.is_set():
            # 打开Steam程序
            subprocess.Popen(["start", steam_program_url], shell=True)
            self.log("打开Banana程序")

            # 等待程序完全启动
            time.sleep(10)

            # 获取窗口句柄
            hwnd = None
            for i in range(10):
                hwnds = self.find_window(steam_window_title)
                if hwnds:
                    hwnd = hwnds[0]
                    break
                self.log("尝试获取窗口...")
                time.sleep(1)

            if hwnd:
                try:
                    for _ in range(5):
                        if self.bring_window_to_front(hwnd):
                            break
                        time.sleep(1)

                    # 获取窗口位置和尺寸
                    rect = win32gui.GetWindowRect(hwnd)
                    x = rect[0]
                    y = rect[1]
                    width = rect[2] - rect[0]
                    height = rect[3] - rect[1]

                    # 计算窗口的中央位置
                    center_x = x + width // 2
                    center_y = y + height // 2

                    # 模拟鼠标点击窗口中央
                    pyautogui.click(center_x, center_y)
                    self.log("模拟鼠标点击窗口中央")

                    # 等待一段时间，以确保点击生效
                    time.sleep(5)

                    # 关闭程序
                    subprocess.Popen(["taskkill", "/F", "/IM", steam_program_process_name], shell=True)
                    self.log("关闭Banana程序")
                except Exception as e:
                    self.log(f"在窗口上执行操作时出错: {e}")
            else:
                self.log("未找到Banana.exe窗口")

            # 获取用户输入的间隔时间
            interval_hours = float(self.interval.get())
            interval_seconds = interval_hours * 3600

            self.log(f"等待 {interval_seconds} 秒后再次执行")
            # 等待间隔时间或直到停止事件被设置
            if self.stop_event.wait(interval_seconds):
                break

    def start(self):
        try:
            interval = float(self.interval.get())
            if interval <= 0:
                raise ValueError
        except ValueError:
            messagebox.showerror("错误", "请输入有效的间隔时间（小时）")
            return

        self.running = True
        self.stop_event.clear()
        self.start_button.config(state=DISABLED)
        self.stop_button.config(state=NORMAL)
        self.thread = Thread(target=self.open_and_click)
        self.thread.start()
        self.log("启动Steam Clicker")

    def stop(self):
        self.running = False
        self.stop_event.set()
        self.start_button.config(state=NORMAL)
        self.stop_button.config(state=DISABLED)
        if self.thread:
            self.thread.join()
        self.log("停止Steam Clicker")

    def quit_app(self, icon, item):
        self.stop()
        icon.stop()
        self.root.quit()

    def show_window(self, icon, item):
        self.root.deiconify()
        icon.stop()

    def create_tray_icon(self):
        # 加载香蕉图标
        image = Image.open(BytesIO(base64.b64decode(banana_base64)))

        menu = (item('显示', self.show_window), item('退出', self.quit_app))
        self.tray_icon = pystray.Icon("Steam Clicker", image, "Steam Clicker", menu)

        self.root.protocol('WM_DELETE_WINDOW', self.minimize_to_tray)

    def minimize_to_tray(self):
        self.root.withdraw()
        self.tray_icon.run()

    def log(self, message):
        timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
        log_message = f"{timestamp} - {message}"
        logging.info(log_message)
        self.log_text.config(state='normal')
        self.log_text.insert(END, log_message + '\n')
        self.log_text.config(state='disabled')
        self.log_text.yview(END)


if __name__ == "__main__":
    root = Tk()
    app = SteamClickerApp(root)
    root.mainloop()
